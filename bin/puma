#! /usr/bin/python

import sys, os
sys.path.append(os.environ["HOME"] + '/novatools/puma/lib')
import puma
puma = puma.Puma()
from optparse import OptionParser
parser = OptionParser()


class CLI:
    def launch(self, arg):
        puma.run_instance(arg)

    def list(self, arg):
        if arg == "images":
            for image in puma.get_image_list():
                print image
        if arg == "instances":
            for instance in puma.get_instance_list():
                print instance.id, "\t", instance.image_id, "\t", instance.instance_type, "\t", instance.dns_name, "\t", instance.state


    def ssh(self, arg):
        print puma.get_instance_list()
        try:
            int(arg[0])
            os.system("sudo ssh -i" + puma.puma_dir+"/creds/"+puma.config["keyfile"] + " " + arg)
        except:
            try:
                for instance in puma.get_instance_list():
                     if str(instance.id) == arg:
                         os.system("sudo ssh -i" + puma.puma_dir+"/creds/"+puma.config["keyfile"]+" "+instance.dns_name)
            except ValueError:
                print "ERROR: Instance does not exist"

cli = CLI()

(options, args) = parser.parse_args()
if args[0] == "list":
    if args[1] == "images":
        cli.list("images")
    elif args[1] == "instances":
        cli.list("instances")
    else:
        print "ERROR: Not a valid expression " + '"' + str(args[0]), str(args[1]) + '"'

elif args[0] == "launch":
    cli.launch(args[1])

elif args[0] == "ssh":
    cli.ssh(args[1])

else:
    print "ERROR: Not a valid expression " + '"' + str(args[0]) + '"'
